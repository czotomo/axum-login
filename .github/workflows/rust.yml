name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  POSTGRES_URL: postgres://postgres:postgres@localhost:5432
  MYSQL_URL: mysql://root@localhost:3306/public
  SQLITE_URL: sqlite://memory

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pwd:
          - .
          - examples

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.pwd }}
          workspaces: ${{ matrix.pwd }}
      - name: clippy
        working-directory: ${{ matrix.pwd }}
        run: |
          cargo clippy --all --all-targets --all-features -- -Dwarnings
      - name: rustfmt
        working-directory: ${{ matrix.pwd }}
        run: |
          cargo fmt --all -- --check

  check-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v2
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::broken-intra-doc-links"
        run: cargo doc --all-features --no-deps

  test:
    needs: check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - name: Install Tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.22.0
          use-tool-cache: true
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --all-targets
      - name: Coverage
        working-directory: ./axum-login
        run: cargo tarpaulin --all-features --all-targets -o Lcov --output-dir ./coverage
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  test-docs:
    needs: check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --doc

  integration-tests:
    strategy:
      matrix:
        database_backend:
          - SQLITE
          - MYSQL
          - POSTGRES

    needs: check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set database URL
        run: echo "DATABASE_URL=$(env | grep ${{ matrix.database_backend }}_URL | cut -d "=" -f 2)" >> $GITHUB_ENV
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - uses: actions/checkout
      - name: Setup DBs
        run: docker-compose up -d
      - uses: Swatinem/rust-cache@v2
      - name: Run integration tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path "axum-login-tests/Cargo.toml" --features ${{ matrix.database_backend }}
